# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: Test

on:
  push:
    branches:
      - '**'
      - '!dependabot/**'
    tags:
      - '**'
  pull_request:

concurrency:
  group: ${{ github.repository }}-${{ github.head_ref || github.sha }}-${{ github.workflow }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          cache: yarn
          node-version: 18
      - run: yarn install
      - run: yarn run lint:ci

  docker:
    name: Debian Node.js 18
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      DOCKER_VOLUME_PREFIX: .docker/
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: .docker
          key: jest-docker-${{ hashFiles('src/**/*.ts', 'test/**/*.ts', 'yarn.lock') }}
          restore-keys: jest-docker-
      - name: Run
        run: |
          docker compose run debian

  macos:
    name: macOS Node.JS ${{ matrix.node }}
    runs-on: macos-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        node: [18]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: .jest-cache
          key: jest-${{ runner.os }}-${{ hashFiles('src/**/*.ts', 'test/**/*.ts', 'yarn.lock') }}
          restore-keys: jest-${{ runner.os }}-
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node }}
      - name: Build
        shell: bash
        run: ci/scripts/build.sh $(pwd)
      - name: Test
        shell: bash
        run: ci/scripts/test.sh $(pwd)

  windows:
    name: Windows NodeJS ${{ matrix.node }}
    runs-on: windows-latest
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        node: [18]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: .jest-cache
          key: jest-${{ runner.os }}-${{ hashFiles('src/**/*.ts', 'test/**/*.ts', 'yarn.lock') }}
          restore-keys: jest-${{ runner.os }}-
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: ${{ matrix.node }}
      - name: Build
        shell: bash
        run: ci/scripts/build.sh $(pwd)
      - name: Test
        shell: bash
        run: ci/scripts/test.sh $(pwd)

  integration:
    name: Integration
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: Checkout Arrow
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          repository: apache/arrow
          submodules: recursive
      - name: Checkout Arrow Rust
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: apache/arrow-rs
          path: rust
      - name: Checkout Arrow nanoarrow
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: apache/arrow-nanoarrow
          path: nanoarrow
      - name: Checkout Arrow Go
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: apache/arrow-go
          path: go
      - name: Checkout Arrow Java
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: apache/arrow-java
          path: java
      - name: Checkout Arrow JavaScript
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: js
      - name: Free up disk space
        run: |
          ci/scripts/util_free_space.sh
      - name: Cache Docker Volumes
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: .docker
          key: integration-conda-${{ hashFiles('cpp/**') }}
          restore-keys: integration-conda-
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3
      - name: Setup Archery
        run: pip install -e dev/archery[docker]
      - name: Execute Docker Build
        run: |
          source ci/scripts/util_enable_core_dumps.sh
          archery docker run \
            -e ARCHERY_DEFAULT_BRANCH=main \
            -e ARCHERY_INTEGRATION_TARGET_IMPLEMENTATIONS=js \
            -e ARCHERY_INTEGRATION_WITH_GO=1 \
            -e ARCHERY_INTEGRATION_WITH_JAVA=1 \
            -e ARCHERY_INTEGRATION_WITH_JS=1 \
            -e ARCHERY_INTEGRATION_WITH_NANOARROW=1 \
            -e ARCHERY_INTEGRATION_WITH_RUST=1 \
            conda-integration
